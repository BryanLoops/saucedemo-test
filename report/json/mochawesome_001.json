{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 1,
    "pending": 0,
    "failures": 8,
    "start": "2024-12-23T15:37:23.312Z",
    "end": "2024-12-23T15:37:32.269Z",
    "duration": 8957,
    "testsRegistered": 9,
    "passPercent": 11.11111111111111,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7b6c1e93-28bf-4893-bf17-b2c1f707c844",
      "title": "",
      "fullFile": "cypress/e2e/error/update/pageUpdate.cy.js",
      "file": "cypress/e2e/error/update/pageUpdate.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
          "title": "Test if application is correctly updating the content",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Updates products inside cart information page",
              "fullTitle": "Test if application is correctly updating the content Updates products inside cart information page",
              "timedOut": null,
              "duration": 1226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.addOrRemoveAllItems();\ncy.get('[data-test=\"shopping-cart-link\"]').click();\ncy.get('[data-test=\"cart-contents-container\"]').find('[data-test=\"inventory-item\"]').should('have.length', 6);",
              "err": {
                "message": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48083)\n    at r (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48147)\n    at Object.He (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388533)\n    at Ye (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388687)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:406912)\n    at Cr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407006)\n    at Tr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407421)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:413069)\n    at Fe (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:488790)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:408889)",
                "diff": null
              },
              "uuid": "c7ca08cd-5388-43da-a516-5175e98fbb14",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Updates products at main page after changing cart information",
              "fullTitle": "Test if application is correctly updating the content Updates products at main page after changing cart information",
              "timedOut": null,
              "duration": 951,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.addOrRemoveAllItems();\ncy.get('[data-test=\"shopping-cart-link\"]').click();\ncy.get('[data-test=\"cart-list\"]').find('button').each($button => {\n  $button.click();\n});\ncy.get('[data-test=\"cart-contents-container\"]').find('[data-test=\"inventory-item\"]').should('have.length', 0);\ncy.get('[data-test=\"continue-shopping\"]').click();\ncy.get('[data-test=\"add-to-cart-sauce-labs-onesie\"]').click();\ncy.get('[data-test=\"inventory-container\"]').find('button').should('contain.text', 'Add to cart');",
              "err": {
                "message": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48083)\n    at r (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48147)\n    at Object.He (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388533)\n    at Ye (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388687)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:406912)\n    at Cr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407006)\n    at Tr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407421)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:413069)\n    at Fe (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:488790)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:408889)",
                "diff": null
              },
              "uuid": "e4963df5-33ec-45c3-986f-15eb497f34ce",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the za product order",
              "fullTitle": "Test if application is correctly updating the content Checks the za product order",
              "timedOut": null,
              "duration": 938,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let itemsList = [];\nlet itemsListTest = [];\ncy.filterItems('inventory-container', itemsList);\ncy.changeFilter('za');\ncy.filterItems('inventory-container', itemsListTest).then(() => {\n  expect(itemsListTest).to.deep.equal(itemsList.reverse());\n});",
              "err": {
                "message": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]",
                "estack": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]\n    at Context.eval (webpack://teste-bix/./cypress/e2e/error/update/pageUpdate.cy.js:43:38)",
                "diff": "- [ { name: 'Sauce Labs Backpack',\n-     description: 'carry.allTheThings() with the sleek, streamlined Sly Pack that melds uncompromising style with unequaled laptop and tablet protection.',\n-     price: 29.99 },\n-   { name: 'Sauce Labs Bike Light',\n-     description: 'A red light isn\\'t the desired state in testing but it sure helps when riding your bike at night. Water-resistant with 3 lighting modes, 1 AAA battery included.',\n-     price: 9.99 },\n-   { name: 'Sauce Labs Bolt T-Shirt',\n-     description: 'Get your testing superhero on with the Sauce Labs bolt T-shirt. From American Apparel, 100% ringspun combed cotton, heather gray with red bolt.',\n+ [ { name: 'Test.allTheThings() T-Shirt (Red)',\n+     description: 'This classic Sauce Labs t-shirt is perfect to wear when cozying up to your keyboard to automate a few tests. Super-soft and comfy ringspun combed cotton.',\n     price: 15.99 },\n+   { name: 'Sauce Labs Onesie',\n+     description: 'Rib snap infant onesie for the junior automation engineer in development. Reinforced 3-snap bottom closure, two-needle hemmed sleeved and bottom won\\'t unravel.',\n+     price: 7.99 },\n   { name: 'Sauce Labs Fleece Jacket',\n     description: 'It\\'s not every day that you come across a midweight quarter-zip fleece jacket capable of handling everything from a relaxing day outdoors to a busy day at the office.',\n     price: 49.99 },\n-   { name: 'Sauce Labs Onesie',\n-     description: 'Rib snap infant onesie for the junior automation engineer in development. Reinforced 3-snap bottom closure, two-needle hemmed sleeved and bottom won\\'t unravel.',\n-     price: 7.99 },\n-   { name: 'Test.allTheThings() T-Shirt (Red)',\n-     description: 'This classic Sauce Labs t-shirt is perfect to wear when cozying up to your keyboard to automate a few tests. Super-soft and comfy ringspun combed cotton.',\n-     price: 15.99 } ]\n+   { name: 'Sauce Labs Bolt T-Shirt',\n+     description: 'Get your testing superhero on with the Sauce Labs bolt T-shirt. From American Apparel, 100% ringspun combed cotton, heather gray with red bolt.',\n+     price: 15.99 },\n+   { name: 'Sauce Labs Bike Light',\n+     description: 'A red light isn\\'t the desired state in testing but it sure helps when riding your bike at night. Water-resistant with 3 lighting modes, 1 AAA battery included.',\n+     price: 9.99 },\n+   { name: 'Sauce Labs Backpack',\n+     description: 'carry.allTheThings() with the sleek, streamlined Sly Pack that melds uncompromising style with unequaled laptop and tablet protection.',\n+     price: 29.99 } ]\n"
              },
              "uuid": "8fa305fc-fdf7-45e7-844a-0f71b6ad7ca1",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the az product order",
              "fullTitle": "Test if application is correctly updating the content Checks the az product order",
              "timedOut": null,
              "duration": 921,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let itemsList = [];\nlet itemsListTest = [];\ncy.filterItems('inventory-container', itemsList);\ncy.changeFilter('za');\ncy.changeFilter('az');\ncy.filterItems('inventory-container', itemsListTest).then(() => {\n  expect(itemsListTest).to.deep.equal(itemsList);\n});",
              "err": {},
              "uuid": "ddb1470d-137b-4ec4-b251-d20970f98c4c",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the lohi product price order",
              "fullTitle": "Test if application is correctly updating the content Checks the lohi product price order",
              "timedOut": null,
              "duration": 993,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let itemsList = [];\nlet itemsListTest = [];\ncy.filterItems('inventory-container', itemsList);\ncy.changeFilter('lohi');\ncy.filterItems('inventory-container', itemsListTest).then(() => {\n  let originalPrices = itemsList.map(item => item.price);\n  let newPrices = itemsListTest.map(item => item.price);\n  expect(newPrices).to.deep.equal(originalPrices.sort((a, b) => {\n    return a - b;\n  }));\n});",
              "err": {
                "message": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]",
                "estack": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]\n    at Context.eval (webpack://teste-bix/./cypress/e2e/error/update/pageUpdate.cy.js:73:34)",
                "diff": "- [ 29.99, 9.99, 15.99, 49.99, 7.99, 15.99 ]\n+ [ 7.99, 9.99, 15.99, 15.99, 29.99, 49.99 ]\n"
              },
              "uuid": "883eacd1-fba6-4cc4-a9da-db2a794d82fc",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the hilo product price order",
              "fullTitle": "Test if application is correctly updating the content Checks the hilo product price order",
              "timedOut": null,
              "duration": 1106,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let itemsList = [];\nlet itemsListTest = [];\ncy.changeFilter('lohi');\ncy.filterItems('inventory-container', itemsList);\ncy.changeFilter('hilo');\ncy.filterItems('inventory-container', itemsListTest).then(() => {\n  let originalPrices = itemsList.map(item => item.price);\n  let newPrices = itemsListTest.map(item => item.price);\n  expect(newPrices).to.deep.equal(originalPrices.sort((a, b) => {\n    return b - a;\n  }));\n});",
              "err": {
                "message": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]",
                "estack": "AssertionError: expected [ Array(6) ] to deeply equal [ Array(6) ]\n    at Context.eval (webpack://teste-bix/./cypress/e2e/error/update/pageUpdate.cy.js:90:34)",
                "diff": "- [ 29.99, 9.99, 15.99, 49.99, 7.99, 15.99 ]\n+ [ 49.99, 29.99, 15.99, 15.99, 9.99, 7.99 ]\n"
              },
              "uuid": "7f3094d8-9169-487a-8e31-564dc5cd1f5d",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks the Reset App State",
              "fullTitle": "Test if application is correctly updating the content Checks the Reset App State",
              "timedOut": null,
              "duration": 801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let buttonsTexts = [];\ncy.addOrRemoveAllItems();\ncy.get('[data-test=\"inventory-container\"]').find('button').then($buttons => {\n  buttonsTexts = Cypress.$($buttons).map((_, button) => Cypress.$(button).text().trim()).get();\n  cy.fixture('buttonsTestPatterns').then(buttons => {\n    expect(buttonsTexts).to.deep.equal(buttons['allRemove']);\n  });\n});\ncy.get('[id=\"react-burger-menu-btn\"]').click();\ncy.get('[data-test=\"reset-sidebar-link\"]').click();\ncy.reload();\ncy.get('[data-test=\"inventory-container\"]').find('button').then($buttons => {\n  buttonsTexts = Cypress.$($buttons).map((_, button) => Cypress.$(button).text().trim()).get();\n  cy.fixture('buttonsTestPatterns').then(buttons => {\n    expect(buttonsTexts).to.deep.equal(buttons['allAddToCart']);\n  });\n});",
              "err": {
                "message": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48083)\n    at r (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48147)\n    at Object.He (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388533)\n    at Ye (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388687)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:406912)\n    at Cr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407006)\n    at Tr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407421)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:413069)\n    at Fe (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:488790)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:408889)",
                "diff": null
              },
              "uuid": "39e6312d-06f4-4824-bbcb-0ecac0f422d9",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Updates the 'Add to cart' button text to 'Remove'",
              "fullTitle": "Test if application is correctly updating the content Updates the 'Add to cart' button text to 'Remove'",
              "timedOut": null,
              "duration": 827,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let buttonsTexts = [];\ncy.addOrRemoveAllItems();\ncy.get('[data-test=\"inventory-container\"]').find('button').then($buttons => {\n  buttonsTexts = Cypress.$($buttons).map((_, button) => Cypress.$(button).text().trim()).get();\n  cy.fixture('buttonsTestPatterns').then(buttons => {\n    expect(buttonsTexts).to.deep.equal(buttons['allRemove']);\n  });\n});",
              "err": {
                "message": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48083)\n    at r (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48147)\n    at Object.He (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388533)\n    at Ye (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388687)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:406912)\n    at Cr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407006)\n    at Tr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407421)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:413069)\n    at Fe (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:488790)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:408889)",
                "diff": null
              },
              "uuid": "6ebcd713-d639-45d9-bb7c-f205defab497",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Updates the 'Remove' button text back to 'Add to Cart'",
              "fullTitle": "Test if application is correctly updating the content Updates the 'Remove' button text back to 'Add to Cart'",
              "timedOut": null,
              "duration": 799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let buttonsTexts = [];\ncy.addOrRemoveAllItems();\ncy.addOrRemoveAllItems();\ncy.get('[data-test=\"inventory-container\"]').find('button').then($buttons => {\n  buttonsTexts = Cypress.$($buttons).map((_, button) => Cypress.$(button).text().trim()).get();\n  cy.fixture('buttonsTestPatterns').then(buttons => {\n    expect(buttonsTexts).to.deep.equal(buttons['allAddToCart']);\n  });\n});",
              "err": {
                "message": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "Error: The following error originated from your application code, not from Cypress.\n\n  > Failed to add item to the cart.\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48083)\n    at r (https://www.saucedemo.com/static/js/main.018d2d1e.chunk.js:1:48147)\n    at Object.He (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388533)\n    at Ye (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:388687)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:406912)\n    at Cr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407006)\n    at Tr (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:407421)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:413069)\n    at Fe (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:488790)\n    at <unknown> (https://www.saucedemo.com/static/js/2.84a5cbf3.chunk.js:2:408889)",
                "diff": null
              },
              "uuid": "3a1682fd-bd79-46b6-90ff-96c9eb2dcd94",
              "parentUUID": "a85b5510-859d-4aad-84f1-49ddbf12b3bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ddb1470d-137b-4ec4-b251-d20970f98c4c"
          ],
          "failures": [
            "c7ca08cd-5388-43da-a516-5175e98fbb14",
            "e4963df5-33ec-45c3-986f-15eb497f34ce",
            "8fa305fc-fdf7-45e7-844a-0f71b6ad7ca1",
            "883eacd1-fba6-4cc4-a9da-db2a794d82fc",
            "7f3094d8-9169-487a-8e31-564dc5cd1f5d",
            "39e6312d-06f4-4824-bbcb-0ecac0f422d9",
            "6ebcd713-d639-45d9-bb7c-f205defab497",
            "3a1682fd-bd79-46b6-90ff-96c9eb2dcd94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}